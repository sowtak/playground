import{component as u,html as s,render as E,useCallback as d,useEffect as p,useState as y}from"./snowpack/pkg/haunted.js";import{until as L}from"./snowpack/pkg/lit-html/directives/until.js";import{registerTranslateConfig as j,translate as f,use as b}from"./snowpack/pkg/lit-translate.js";import{setLocalAuth as $}from"./auth.js";import"./components/app-header.js";import{authStore as m,useStore as g}from"./ctx.js";import{request as c}from"./http.js";import{createRouter as A,hijackClicks as S}from"./router.js";const o=A();o.route("/",h(a("home"))),o.route("/access-callback",a("access-callback")),o.route("/search",a("search")),o.route("/notifications",h(a("notifications"))),o.route("/privacy-policy",a("privacy-policy")),o.route(/^\/posts\/(?<postID>[^\/]+)$/,a("post")),o.route(/^\/tagged-posts\/(?<tag>[^\/]+)$/,a("tagged-posts")),o.route(/^\/@(?<username>[^\/]+)$/,a("user")),o.route(/^\/@(?<username>[^\/]+)\/followees$/,a("user-followees")),o.route(/^\/@(?<username>[^\/]+)\/followers$/,a("user-followers")),o.route(/.*/,a("not-found")),addEventListener("click",S);function a(e){return t=>s`${L(import(`/components/${e}-page.js`).then(n=>n.default({params:t}),n=>(console.error("could not import page:",n),s`
            <div class="container">
                <p class="error">${f("errView")}</p>
            </div>
        `)),x())}`}function D({args:e,component:t,fallback:n}){const[r]=g(m);return r!==null?t(...e):n(...e)}customElements.define("guarded-view",u(D,{useShadowDOM:!1}));function h(e,t=a("access")){return(...n)=>s`<guarded-view .args=${n} .component=${e} .fallback=${t}>`}function x(){return s`
        <main class="container loader" aria-busy="true" aria-live="polite">
            <p>${f("pageLoader")}</p>
        </main>
    `}function I({router:e}){const[t,n]=y(e.exec()),r=d(()=>{n(e.exec())},[e]);return p(()=>(addEventListener("popstate",r),addEventListener("pushstate",r),addEventListener("replacestate",r),addEventListener("hashchange",r),()=>{removeEventListener("popstate",r),removeEventListener("pushstate",r),removeEventListener("replacestate",r),removeEventListener("hashchange",r)}),[]),t}customElements.define("router-view",u(I,{useShadowDOM:!1}));const M=1e3*60*60*24,O=1e3*60*60*24;function T(){const[e,t]=g(m),n=d(()=>{if(e===null)return;const r=new Date;r.setTime(r.getTime()+O),!(e.expiresAt>=r)&&R().then(i=>{t(k=>{const l={...k,...i};return $(l),l})},i=>{console.error("could not refresh auth:",i)})},[e]);return p(()=>{if(e===null)return;n();const r=setInterval(()=>{n()},M);return()=>{clearInterval(r)}},[e]),s`
        <app-header></app-header>
        <router-view .router=${o}></router-view>
    `}customElements.define("nakama-app",u(T,{useShadowDOM:!1})),j({loader:e=>fetch(`/i18n/${e}.json`).then(t=>t.json())});const v=W();document.documentElement.lang=v,b(v).then(()=>{E(s`<nakama-app></nakama-app>`,document.body)});function R(){return c("GET","/api/token").then(e=>e.body).then(e=>(e.expiresAt=new Date(e.expiresAt),e))}function W(){let e=localStorage.getItem("preferred_lang");if(e==="es")return"es";if(Array.isArray(window.navigator.languages)){for(const t of window.navigator.languages)if(t==="es"||typeof t=="string"&&t.startsWith("es-"))return"es"}return e=window.navigator.userLanguage,e==="es"||typeof e=="string"&&e.startsWith("es-")||(e=window.navigator.language,e==="es"||typeof e=="string"&&e.startsWith("es-"))?"es":"en"}"serviceWorker"in navigator&&(navigator.serviceWorker.register("/sw.js"),navigator.serviceWorker.addEventListener("message",e=>{if(typeof e.data!="object"||e.data===null||e.data.type!=="notificationclick"||typeof e.data.detail!="object"||e.data.detail===null||typeof e.data.detail.id!="string")return;const t=e.data.detail;P(t.id).then(()=>{dispatchEvent(new CustomEvent("notification-read",{bubbles:!0,detail:t}))})})),addEventListener("error",C),addEventListener("unhandledrejection",V);function C(e){e.error instanceof DOMException&&e.error.name==="AbortError"||w(String(e.error)).catch(t=>{console.error("could not push error log:",t)})}function V(e){e.reason instanceof DOMException&&e.reason.name==="AbortError"||w(String(e.reason)).catch(t=>{console.error("could not push unhandled rejection log:",t)})}function w(e){return c("POST","/api/logs",{body:{error:e}})}function P(e){return c("POST",`/api/notifications/${encodeURIComponent(e)}/mark_as_read`).then(()=>{})}
